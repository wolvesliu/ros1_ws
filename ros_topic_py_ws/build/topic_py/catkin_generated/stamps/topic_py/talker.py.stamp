#!/usr/bin/env python
# license removed for brevity

import rospy  #导入rospy
from std_msgs.msg import String #使我们能够重用std_msgs/String消息类型

def talker():
    pub = rospy.Publisher('chatter', String, queue_size=10) # 创建发布者. 声明该节点正在使用String消息类型发布到chatter话题。

    #把该节点的名称告诉了rospy,只有rospy掌握了这一信息后，才会开始与ROS主节点进行通信。anonymous=True 添加随机数，来确保节点具有唯一的名称
    rospy.init_node('talker', anonymous=True) 

    #创建一个Rate对象rate
    rate = rospy.Rate(10) # 10hz, 每秒循环10次
    while not rospy.is_shutdown():#检查rospy.is_shutdown()标志，然后执行代码逻辑。
        hello_str = "hello world %s" % rospy.get_time()
        rospy.loginfo(hello_str) #它有3个任务：打印消息到屏幕上；把消息写入节点的日志文件中；写入rosout
        pub.publish(hello_str) #将一个字符串发布到chatter话题。
        rate.sleep()

#当该模块被直接执行时，该条件成立，执行其下的代码；当该模块被导入时，该条件不成立，其下的代码不会被执行。
if __name__ == '__main__':
    try:
        talker()
    except rospy.ROSInterruptException: #当按下Ctrl+C或节点因其他原因关闭时
        pass